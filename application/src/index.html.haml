<!DOCTYPE html>
%html{ :lang => "en" }
  %head
    %meta{ :charset => 'utf-8' }
    %title postMessage cross domain communication demo - the web app

    %link{ :rel => 'stylesheet', :href => 'http://html5resetcss.googlecode.com/files/html5reset-1.6.1.css', :media => 'screen' }
    %link{ :rel => 'stylesheet', :href => 'css/style.css', :media => 'screen' }

    <!--[if lt IE 9]>
    <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->


  %body
    %header
      %h1 This is a web application

    %ol
      %li
        %p
          It loads 3 images from another domain under my control,
          %code s3-clone.heroku.com
        %ul#images
          %li
            %img{ "data-path" => 'images/5-5.png' }
          %l
            %img{ "data-path" => 'images/6-5.png' }
          %li
            %img{ "data-path" => 'images/7-5.png' }


      %li
        %p Stiches them in a canvas
        %canvas#main{ :width => '300', :height => '100' }

      %li
        %p
          Manipulates the existing pixels

      %li
        %p
          And calls
          %code canvas.toDataUrl
          without a Browser Security Error.
          %a{ :href => '' } Read this blog post to see how

    #proof
      Here is
      %code canvas.toDataUrl
      %textarea#proof_text

      %p
        And
        %code canvas.toDataUrl
        dumped in yet another image.
      %img#proof_image


    %footer
      %p
        Images fom
        %a{ :href => 'http://tzigla.com/boards/1' } quack, quack, pixel duck - a collaborative drawing on Tzigla

    -# Load the proxy
    %script{ :src => "javascript/proxy.js",  :type => "text/javascript" }

    -# This is your side of the app - where you do something with the images
    %script{ :src => "javascript/application.js",  :type => "text/javascript" }
    :javascript
      window.onload = function() {
        application = new Application.Main()
      }
